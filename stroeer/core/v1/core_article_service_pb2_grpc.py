# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from stroeer.core.v1 import article_pb2 as stroeer_dot_core_dot_v1_dot_article__pb2
from stroeer.core.v1 import core_article_service_pb2 as stroeer_dot_core_dot_v1_dot_core__article__service__pb2


class ArticleServiceStub(object):
    """Service to manage core articles
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetArticle = channel.unary_unary(
                '/stroeer.core.v1.ArticleService/GetArticle',
                request_serializer=stroeer_dot_core_dot_v1_dot_core__article__service__pb2.GetArticleRequest.SerializeToString,
                response_deserializer=stroeer_dot_core_dot_v1_dot_article__pb2.Article.FromString,
                )
        self.ListArticles = channel.unary_unary(
                '/stroeer.core.v1.ArticleService/ListArticles',
                request_serializer=stroeer_dot_core_dot_v1_dot_core__article__service__pb2.ListArticlesRequest.SerializeToString,
                response_deserializer=stroeer_dot_core_dot_v1_dot_core__article__service__pb2.ListArticlesResponse.FromString,
                )


class ArticleServiceServicer(object):
    """Service to manage core articles
    """

    def GetArticle(self, request, context):
        """Returns an article by it's `id`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListArticles(self, request, context):
        """Returns pages of articles by their `home_section`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ArticleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetArticle': grpc.unary_unary_rpc_method_handler(
                    servicer.GetArticle,
                    request_deserializer=stroeer_dot_core_dot_v1_dot_core__article__service__pb2.GetArticleRequest.FromString,
                    response_serializer=stroeer_dot_core_dot_v1_dot_article__pb2.Article.SerializeToString,
            ),
            'ListArticles': grpc.unary_unary_rpc_method_handler(
                    servicer.ListArticles,
                    request_deserializer=stroeer_dot_core_dot_v1_dot_core__article__service__pb2.ListArticlesRequest.FromString,
                    response_serializer=stroeer_dot_core_dot_v1_dot_core__article__service__pb2.ListArticlesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'stroeer.core.v1.ArticleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ArticleService(object):
    """Service to manage core articles
    """

    @staticmethod
    def GetArticle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stroeer.core.v1.ArticleService/GetArticle',
            stroeer_dot_core_dot_v1_dot_core__article__service__pb2.GetArticleRequest.SerializeToString,
            stroeer_dot_core_dot_v1_dot_article__pb2.Article.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListArticles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stroeer.core.v1.ArticleService/ListArticles',
            stroeer_dot_core_dot_v1_dot_core__article__service__pb2.ListArticlesRequest.SerializeToString,
            stroeer_dot_core_dot_v1_dot_core__article__service__pb2.ListArticlesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
