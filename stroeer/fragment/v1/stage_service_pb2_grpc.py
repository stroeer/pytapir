# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from stroeer.fragment.v1 import stage_service_pb2 as stroeer_dot_fragment_dot_v1_dot_stage__service__pb2


class StageServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStages = channel.unary_unary(
                '/stroeer.fragment.v1.StageService/GetStages',
                request_serializer=stroeer_dot_fragment_dot_v1_dot_stage__service__pb2.GetStagesRequest.SerializeToString,
                response_deserializer=stroeer_dot_fragment_dot_v1_dot_stage__service__pb2.GetStagesResponse.FromString,
                )
        self.GetArticleCompanions = channel.unary_unary(
                '/stroeer.fragment.v1.StageService/GetArticleCompanions',
                request_serializer=stroeer_dot_fragment_dot_v1_dot_stage__service__pb2.GetArticleCompanionsRequest.SerializeToString,
                response_deserializer=stroeer_dot_fragment_dot_v1_dot_stage__service__pb2.GetArticleCompanionsResponse.FromString,
                )


class StageServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetStages(self, request, context):
        """*
        ############################################################################
        # Description
        ############################################################################
        Get single stages by requesting them via well-known ids, e.g. "schlagzeilen" or "meistgelesen".

        ############################################################################
        # Status/Error scenario's
        ############################################################################

        scenario: found
        description: service responded without encountering exceptions
        gRPC status: OK
        gRPC error payload: none
        HTTP status: OK
        cacheable: yes

        scenario: internal
        description: internal error while loading data
        gRPC status: INTERNAL
        gRPC error payload: none
        HTTP status: 500
        cacheable: no

        scenario: timeout
        description: timeout while loading data
        gRPC status: DEADLINE_EXCEEDED
        gRPC error payload: none
        HTTP status: 504
        cacheable: no
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetArticleCompanions(self, request, context):
        """request data to render Article Companions as individual html for esi integration on ArticlePages
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStages': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStages,
                    request_deserializer=stroeer_dot_fragment_dot_v1_dot_stage__service__pb2.GetStagesRequest.FromString,
                    response_serializer=stroeer_dot_fragment_dot_v1_dot_stage__service__pb2.GetStagesResponse.SerializeToString,
            ),
            'GetArticleCompanions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetArticleCompanions,
                    request_deserializer=stroeer_dot_fragment_dot_v1_dot_stage__service__pb2.GetArticleCompanionsRequest.FromString,
                    response_serializer=stroeer_dot_fragment_dot_v1_dot_stage__service__pb2.GetArticleCompanionsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'stroeer.fragment.v1.StageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StageService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetStages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stroeer.fragment.v1.StageService/GetStages',
            stroeer_dot_fragment_dot_v1_dot_stage__service__pb2.GetStagesRequest.SerializeToString,
            stroeer_dot_fragment_dot_v1_dot_stage__service__pb2.GetStagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetArticleCompanions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stroeer.fragment.v1.StageService/GetArticleCompanions',
            stroeer_dot_fragment_dot_v1_dot_stage__service__pb2.GetArticleCompanionsRequest.SerializeToString,
            stroeer_dot_fragment_dot_v1_dot_stage__service__pb2.GetArticleCompanionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
